#!/usr/bin/env python3
import os
import yaml

ALLOWED_IMG_EXTENSIONS = ['.png', '.jpg', '.jpeg', '.webp']

iconcontent = 'const icons = [\n'

for icondir in os.listdir('assets/icons') :
    try:
        with open(f"assets/icons/{icondir}/manifest.yaml", "r") as manifest:
            yaml_dict = yaml.safe_load(manifest)

            jsobject = '\t{\n'
            for key in yaml_dict:
                if key == 'images':
                    raise Exception("Please remove \'images\' field in YAML file. It is auto generated by this script already.")

                value = yaml_dict[key]
                if type(value) is list:
                    jsobject += '\t\t' + key + ': ' + str(value) + ',\n'

                elif type(value) is str:
                    if key == 'title' or key == 'author' or key == 'description':
                        # Escape apostrophe and quotas in title author and description fields
                        value = value.replace('"', '\\\"').replace("'", "\\\'")
                    jsobject += '\t\t' + key + ': "' + value + '",\n'

                else:
                    raise Exception(
                        "YAML item not currently supported. Please implement a conversion YAML -> js object in this script.")

            images = []
            for filename in sorted(os.listdir(f"assets/icons/{icondir}")):
                complete_path = f"assets/icons/{icondir}/{filename}"
                if os.path.isfile(complete_path):
                    f_name, f_ext = os.path.splitext(filename) 
                    if f_ext in ALLOWED_IMG_EXTENSIONS:
                        if f_name == 'thumbnail':
                            images = [complete_path] + images # Prepend so that 'thumbnail' file is first in the list
                        else:
                            images.append(complete_path)

            jsobject += '\t\t' + 'images: ' + str(images) + ',\n'

            # -2 is to remove newline and comma from last added line
            jsobject = jsobject[:-2] + '\n\t},\n'
            iconcontent += jsobject

    except yaml.YAMLError as e:
        print(e)
    except Exception as e:
        print(e)
    except:
        pass

# -2 is to remove newline and comma from last added object
iconcontent = iconcontent[:-2] + '\n]'

# Export the dotfiles
iconcontent += '\n\nexport {icons};'

with open("icons.js", "w") as jsfile:
    jsfile.write(iconcontent)


jsfilecontent = 'const dotfiles = [\n'

for themedir in os.listdir("assets/themes"):

    try:
        with open(f"assets/themes/{themedir}/manifest.yaml", "r") as manifest:
            yaml_dict = yaml.safe_load(manifest)

            jsobject = '\t{\n'
            for key in yaml_dict:
                if key == 'images':
                    raise Exception("Please remove \'images\' field in YAML file. It is auto generated by this script already.")

                value = yaml_dict[key]
                if type(value) is list:
                    jsobject += '\t\t' + key + ': ' + str(value) + ',\n'

                elif type(value) is str:
                    if key == 'title' or key == 'author' or key == 'description':
                        # Escape apostrophe and quotas in title author and description fields
                        value = value.replace('"', '\\\"').replace("'", "\\\'")
                    jsobject += '\t\t' + key + ': "' + value + '",\n'

                else:
                    raise Exception(
                        "YAML item not currently supported. Please implement a conversion YAML -> js object in this script.")

            images = []
            for filename in sorted(os.listdir(f"assets/themes/{themedir}")):
                complete_path = f"assets/themes/{themedir}/{filename}"
                if os.path.isfile(complete_path):
                    f_name, f_ext = os.path.splitext(filename) 
                    if f_ext in ALLOWED_IMG_EXTENSIONS:
                        if f_name == 'thumbnail':
                            images = [complete_path] + images # Prepend so that 'thumbnail' file is first in the list
                        else:
                            images.append(complete_path)

            jsobject += '\t\t' + 'images: ' + str(images) + ',\n'

            # -2 is to remove newline and comma from last added line
            jsobject = jsobject[:-2] + '\n\t},\n'
            jsfilecontent += jsobject

    except yaml.YAMLError as e:
        print(e)
    except Exception as e:
        print(e)
    except:
        pass

# -2 is to remove newline and comma from last added object
jsfilecontent = jsfilecontent[:-2] + '\n]'

# Export the dotfiles
jsfilecontent += '\n\nexport {dotfiles};'

with open("dotfiles.js", "w") as jsfile:
    jsfile.write(jsfilecontent)
